{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Header, Icon } from 'react-native-elements';\nimport { adicionarContato } from \"../backend/dados.js\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CadastroContatoScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cpf = _useState4[0],\n    setCpf = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    telefone = _useState8[0],\n    setTelefone = _useState8[1];\n  function cadastrar() {\n    if ((nome, email, telefone) !== '') {\n      var contato = {\n        nome: nome,\n        avatar_url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4HdzG1pEhoNcrazR62fZv_2gNXtiqlAq42A&usqp=CAU',\n        telefone: telefone,\n        email: email\n      };\n      adicionarContato(contato);\n      limparCampos();\n      alert(\"Contato Cadastro com sucesso!\");\n      navigation.navigate('Lista');\n    } else {\n      alert(\"Favor inserir todos os campos!\");\n    }\n  }\n  function inserirDados() {\n    return _inserirDados.apply(this, arguments);\n  }\n  function _inserirDados() {\n    _inserirDados = _asyncToGenerator(function* () {\n      if ((nome, email, telefone, cpf) !== '') {\n        yield axios.post('http://professornilson.com/testeservico/clientes', {\n          nome: nome,\n          cpf: cpf,\n          telefone: telefone,\n          email: email\n        }).then(function (response) {\n          limparCampos();\n          alert(\"Contato Cadastro com sucesso!\");\n          navigation.navigate('Lista');\n          console.log(response);\n        }).catch(function (error) {\n          showMessage({\n            message: \"Algum erro aconteceu!\",\n            type: \"info\"\n          });\n          console.log(error);\n        });\n      } else {\n        alert(\"Favor inserir todos os campos!\");\n      }\n    });\n    return _inserirDados.apply(this, arguments);\n  }\n  function limparCampos() {\n    setNome('');\n    setTelefone('');\n    setEmail('');\n  }\n  return _jsxs(View, {\n    style: [styles2.container, {\n      flexDirection: \"column\"\n    }],\n    children: [_jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(Header, {\n        leftComponent: _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"arrow-left\",\n            size: 25,\n            color: \"white\"\n          }),\n          title: \"\",\n          onPress: function onPress() {\n            return navigation.navigate('Lista');\n          }\n        }),\n        centerComponent: {\n          text: 'Contato',\n          style: {\n            color: '#fff',\n            fontSize: 25,\n            width: '100%',\n            textAlign: 'center'\n          }\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 3\n      },\n      children: [_jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Nome\",\n        value: nome,\n        onChangeText: setNome\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"CPF\",\n        value: cpf,\n        onChangeText: setCpf\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"CPF\",\n        keyboardType: \"numeric\",\n        maxLength: 11,\n        value: cpf,\n        onChangeText: setCpf\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TouchableOpacity, {\n        style: styles2.button,\n        onPress: inserirDados,\n        children: _jsx(Text, {\n          style: styles2.buttonText,\n          children: \"Salvar\"\n        })\n      })]\n    })]\n  });\n}\nvar styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    paddingTop: 10\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    paddingTop: 40\n  },\n  input: {\n    width: 190,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#1c313a',\n    padding: 10,\n    margin: 10,\n    borderRadius: 14,\n    width: 120,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default CadastroContatoScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Button","Header","Icon","adicionarContato","axios","jsx","_jsx","jsxs","_jsxs","CadastroContatoScreen","_ref","navigation","_useState","_useState2","_slicedToArray","nome","setNome","_useState3","_useState4","cpf","setCpf","_useState5","_useState6","email","setEmail","_useState7","_useState8","telefone","setTelefone","cadastrar","contato","avatar_url","limparCampos","alert","navigate","inserirDados","_inserirDados","apply","arguments","_asyncToGenerator","post","then","response","console","log","catch","error","showMessage","message","type","style","styles2","container","flexDirection","children","flex","leftComponent","icon","name","size","color","title","onPress","centerComponent","text","fontSize","width","textAlign","input","placeholder","value","onChangeText","keyboardType","maxLength","button","buttonText","create","alignItems","justifyContent","backgroundColor","paddingTop","fontWeight","marginBottom","height","borderWidth","borderColor","borderRadius","paddingHorizontal","padding","margin"],"sources":["C:/Users/ricar/Documents/Projetos/formacao-node-react-ifpe/react/reactnativeapp/atividade02/screens/cadastroContatoScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Button, Header, Icon } from 'react-native-elements';\r\nimport { adicionarContato } from '../backend/dados.js';\r\nimport axios from 'axios';\r\n\r\nfunction CadastroContatoScreen({ navigation }) {\r\n  const [nome, setNome] = useState('');\r\n  const [cpf, setCpf] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [telefone, setTelefone] = useState('');\r\n\r\n  function cadastrar() {\r\n    if ((nome, email, telefone) !== '') {\r\n      const contato = {\r\n        nome: nome,\r\n        avatar_url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4HdzG1pEhoNcrazR62fZv_2gNXtiqlAq42A&usqp=CAU',\r\n        telefone: telefone, email: email\r\n      };\r\n      adicionarContato(contato);\r\n      limparCampos();\r\n      alert(\"Contato Cadastro com sucesso!\")\r\n      navigation.navigate('Lista');\r\n    } else {\r\n      alert(\"Favor inserir todos os campos!\")\r\n    }\r\n  }\r\n\r\n  async function inserirDados() {\r\n    if ((nome, email, telefone, cpf) !== '') {\r\n\r\n      await axios.post('http://professornilson.com/testeservico/clientes', {\r\n        nome: nome,\r\n        cpf: cpf,\r\n        telefone: telefone,\r\n        email: email,\r\n      }\r\n      )\r\n        .then(function (response) {\r\n          limparCampos();\r\n          alert(\"Contato Cadastro com sucesso!\")\r\n          navigation.navigate('Lista');\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          showMessage({\r\n            message: \"Algum erro aconteceu!\",\r\n            type: \"info\",\r\n          });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      alert(\"Favor inserir todos os campos!\")\r\n    }\r\n  }\r\n\r\n  function limparCampos() {\r\n    setNome('');\r\n    setTelefone('');\r\n    setEmail('');\r\n  }\r\n\r\n  return (\r\n    <View style={[styles2.container, {\r\n      flexDirection: \"column\"\r\n    }]}>\r\n      <View style={{ flex: 1 }} >\r\n      <Header\r\n        leftComponent={<Button\r\n          icon={\r\n            <Icon\r\n              name=\"arrow-left\"\r\n              size={25}\r\n              color=\"white\"\r\n            />\r\n          }\r\n          title=\"\"\r\n          onPress={() => navigation.navigate('Lista')}\r\n        />}\r\n        centerComponent={{ text: 'Contato', \r\n        style: { color: '#fff', fontSize: 25, width: '100%', textAlign: 'center' } \r\n      }}\r\n      />\r\n      </View>\r\n      {/* <View style={styles2.container}> */}\r\n      <View style={{ flex: 3 }} >\r\n        <TextInput\r\n          style={styles2.input}\r\n          placeholder=\"Nome\"\r\n          value={nome}\r\n          onChangeText={setNome}\r\n        />\r\n        <TextInput\r\n          style={styles2.input}\r\n          placeholder=\"CPF\"\r\n          value={cpf}\r\n          onChangeText={setCpf}\r\n        />\r\n        <TextInput\r\n          style={styles2.input}\r\n          placeholder=\"CPF\"\r\n          keyboardType=\"numeric\"\r\n          maxLength={11}\r\n          value={cpf}\r\n          onChangeText={setCpf}\r\n        />\r\n        <TextInput\r\n          style={styles2.input}\r\n          placeholder=\"Email\"\r\n          keyboardType=\"email-address\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n        />\r\n        <TouchableOpacity style={styles2.button} onPress={inserirDados}>\r\n          <Text style={styles2.buttonText}>Salvar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles2 = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    paddingTop: 10\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n    paddingTop: 40\r\n  },\r\n  input: {\r\n    width: 190,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#1c313a',\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 14,\r\n    width: 120,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default CadastroContatoScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}