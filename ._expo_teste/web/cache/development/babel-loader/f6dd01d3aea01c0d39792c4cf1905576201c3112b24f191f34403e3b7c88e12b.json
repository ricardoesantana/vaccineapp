{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Header, Icon } from 'react-native-elements';\nimport { removerContato } from \"../backend/dados.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AlterarContatoScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    getNome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    getEmail = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    getTelefone = _useState6[0],\n    setTelefone = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    getId = _useState8[0],\n    setId = _useState8[1];\n  var _useState9 = useState(getNome),\n    _useState10 = _slicedToArray(_useState9, 2),\n    novoNome = _useState10[0],\n    setNovoNome = _useState10[1];\n  var _useState11 = useState(getEmail),\n    _useState12 = _slicedToArray(_useState11, 2),\n    novoEmail = _useState12[0],\n    setNovoEmail = _useState12[1];\n  var _useState13 = useState(getTelefone),\n    _useState14 = _slicedToArray(_useState13, 2),\n    novoTelefone = _useState14[0],\n    setNovoTelefone = _useState14[1];\n  function atualizarUsuario() {\n    var propriedadesAtualizadas = {\n      nome: novoNome,\n      email: novoEmail,\n      telefone: novoTelefone\n    };\n    atualizarRegistro(id, propriedadesAtualizadas);\n    navigation.goBack();\n  }\n  useEffect(function () {\n    if (route.params) {\n      var nome = route.params.nome;\n      var email = route.params.email;\n      var telefone = route.params.telefone;\n      var _id = route.params.id;\n      setNome(nome);\n      setEmail(email);\n      setTelefone(telefone);\n      setId(_id);\n    }\n  }, []);\n  function alterar() {}\n  function excluir() {\n    removerContato(getId);\n    limparCampos();\n    alert(\"Contato Removido com sucesso!\");\n    navigation.navigate('Lista');\n  }\n  function limparCampos() {\n    setNome(null);\n    setEmail(null);\n    setTelefone(null);\n    setId(null);\n  }\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      leftComponent: _jsx(Button, {\n        icon: _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 25,\n          color: \"white\"\n        }),\n        title: \"\",\n        onPress: function onPress() {\n          return navigation.navigate('Lista');\n        }\n      }),\n      centerComponent: {\n        text: 'Contato',\n        style: {\n          color: '#fff',\n          fontSize: 25\n        }\n      }\n    }), _jsxs(View, {\n      style: styles2.container,\n      children: [_jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Nome\",\n        value: getNome,\n        onChangeText: setNome\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        value: getEmail,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Telefone\",\n        value: getTelefone,\n        onChangeText: setTelefone\n      }), _jsx(TouchableOpacity, {\n        style: styles2.button,\n        onPress: alterar,\n        children: _jsx(Text, {\n          style: styles2.buttonText,\n          children: \"Alterar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles2.button,\n        onPress: excluir,\n        children: _jsx(Text, {\n          style: styles2.buttonText,\n          children: \"Excluir\"\n        })\n      })]\n    })]\n  });\n}\nvar styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    paddingTop: 40\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    paddingTop: 40\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#1c313a',\n    padding: 10,\n    margin: 10,\n    borderRadius: 14,\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default AlterarContatoScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","Button","Header","Icon","removerContato","jsx","_jsx","jsxs","_jsxs","AlterarContatoScreen","_ref","route","navigation","_useState","_useState2","_slicedToArray","getNome","setNome","_useState3","_useState4","getEmail","setEmail","_useState5","_useState6","getTelefone","setTelefone","_useState7","_useState8","getId","setId","_useState9","_useState10","novoNome","setNovoNome","_useState11","_useState12","novoEmail","setNovoEmail","_useState13","_useState14","novoTelefone","setNovoTelefone","atualizarUsuario","propriedadesAtualizadas","nome","email","telefone","atualizarRegistro","id","goBack","params","alterar","excluir","limparCampos","alert","navigate","children","leftComponent","icon","name","size","color","title","onPress","centerComponent","text","style","fontSize","styles2","container","input","placeholder","value","onChangeText","keyboardType","button","buttonText","create","flex","alignItems","justifyContent","backgroundColor","paddingTop","fontWeight","marginBottom","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","padding","margin"],"sources":["C:/Users/ricar/Documents/Projetos/formacao-node-react-ifpe/react/reactnativeapp/atividade02/screens/alterarContatoScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Button, Header, Icon } from 'react-native-elements';\r\nimport { removerContato } from '../backend/dados.js';\r\n\r\nfunction AlterarContatoScreen({ route, navigation }) {\r\n  const [getNome, setNome] = useState();\r\n  const [getEmail, setEmail] = useState();\r\n  const [getTelefone, setTelefone] = useState();\r\n  const [getId, setId] = useState();\r\n\r\n  const [novoNome, setNovoNome] = useState(getNome);\r\n  const [novoEmail, setNovoEmail] = useState(getEmail);\r\n  const [novoTelefone, setNovoTelefone] = useState(getTelefone);\r\n\r\n  function atualizarUsuario() {\r\n    const propriedadesAtualizadas = { nome: novoNome, email: novoEmail, telefone: novoTelefone };\r\n    atualizarRegistro(id, propriedadesAtualizadas);\r\n    navigation.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (route.params) {\r\n        const { nome } = route.params;\r\n        const { email } = route.params;\r\n        const { telefone } = route.params;\r\n        const { id } = route.params;\r\n\r\n        setNome(nome);\r\n        setEmail(email);\r\n        setTelefone(telefone);\r\n        setId(id);\r\n    }\r\n  }, []);\r\n\r\n  function alterar() {\r\n    // Aqui você pode implementar a lógica para cadastrar o usuário\r\n    // console.log(`Nome: ${nome}, Email: ${email}, Senha: ${senha}`);\r\n  }\r\n\r\n  function excluir() {\r\n    removerContato(getId);\r\n    limparCampos();\r\n    alert(\"Contato Removido com sucesso!\")\r\n    navigation.navigate('Lista');\r\n  }\r\n\r\n  function limparCampos() {\r\n    setNome(null);\r\n    setEmail(null);\r\n    setTelefone(null);\r\n    setId(null);\r\n  }\r\n\r\n  return (\r\n    <View >\r\n      <Header\r\n          leftComponent={ <Button\r\n            icon={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                size={25}\r\n                color=\"white\"\r\n              />\r\n            }\r\n            title=\"\"\r\n            onPress={()=>navigation.navigate('Lista')}            \r\n          /> }\r\n          centerComponent={{ text: 'Contato', style: { color: '#fff', fontSize: 25 } }}\r\n      />\r\n      <View style={styles2.container}>    \r\n      \r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Nome\"\r\n        value={getNome}\r\n        onChangeText={setNome}\r\n      />\r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Email\"\r\n        keyboardType=\"email-address\"\r\n        value={getEmail}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Telefone\"\r\n        value={getTelefone}\r\n        onChangeText={setTelefone}\r\n      />\r\n      <TouchableOpacity style={styles2.button} onPress={alterar}>\r\n        <Text style={styles2.buttonText}>Alterar</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles2.button} onPress={excluir}>\r\n        <Text style={styles2.buttonText}>Excluir</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles2 = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    paddingTop: 40\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n    paddingTop: 40\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#1c313a',\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 14,\r\n    width: '80%',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default AlterarContatoScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,uBAAuB;AAC5D,SAASC,cAAc;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,SAASC,oBAAoBA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAC/C,IAAAC,SAAA,GAA2BnB,QAAQ,EAAE;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,OAAO,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACvB,IAAAI,UAAA,GAA6BxB,QAAQ,EAAE;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAhCE,QAAQ,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACzB,IAAAG,UAAA,GAAmC5B,QAAQ,EAAE;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAtCE,WAAW,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC/B,IAAAG,UAAA,GAAuBhC,QAAQ,EAAE;IAAAiC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA1BE,KAAK,GAAAD,UAAA;IAAEE,KAAK,GAAAF,UAAA;EAEnB,IAAAG,UAAA,GAAgCpC,QAAQ,CAACsB,OAAO,CAAC;IAAAe,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA1CE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAC5B,IAAAG,WAAA,GAAkCxC,QAAQ,CAAC0B,QAAQ,CAAC;IAAAe,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA7CE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAAwC5C,QAAQ,CAAC8B,WAAW,CAAC;IAAAe,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAtDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpC,SAASG,gBAAgBA,CAAA,EAAG;IAC1B,IAAMC,uBAAuB,GAAG;MAAEC,IAAI,EAAEZ,QAAQ;MAAEa,KAAK,EAAET,SAAS;MAAEU,QAAQ,EAAEN;IAAa,CAAC;IAC5FO,iBAAiB,CAACC,EAAE,EAAEL,uBAAuB,CAAC;IAC9C/B,UAAU,CAACqC,MAAM,EAAE;EACrB;EAEAtD,SAAS,CAAC,YAAM;IACd,IAAIgB,KAAK,CAACuC,MAAM,EAAE;MACd,IAAQN,IAAI,GAAKjC,KAAK,CAACuC,MAAM,CAArBN,IAAI;MACZ,IAAQC,KAAK,GAAKlC,KAAK,CAACuC,MAAM,CAAtBL,KAAK;MACb,IAAQC,QAAQ,GAAKnC,KAAK,CAACuC,MAAM,CAAzBJ,QAAQ;MAChB,IAAQE,GAAE,GAAKrC,KAAK,CAACuC,MAAM,CAAnBF,EAAE;MAEV/B,OAAO,CAAC2B,IAAI,CAAC;MACbvB,QAAQ,CAACwB,KAAK,CAAC;MACfpB,WAAW,CAACqB,QAAQ,CAAC;MACrBjB,KAAK,CAACmB,GAAE,CAAC;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,OAAOA,CAAA,EAAG,CAGnB;EAEA,SAASC,OAAOA,CAAA,EAAG;IACjBhD,cAAc,CAACwB,KAAK,CAAC;IACrByB,YAAY,EAAE;IACdC,KAAK,CAAC,+BAA+B,CAAC;IACtC1C,UAAU,CAAC2C,QAAQ,CAAC,OAAO,CAAC;EAC9B;EAEA,SAASF,YAAYA,CAAA,EAAG;IACtBpC,OAAO,CAAC,IAAI,CAAC;IACbI,QAAQ,CAAC,IAAI,CAAC;IACdI,WAAW,CAAC,IAAI,CAAC;IACjBI,KAAK,CAAC,IAAI,CAAC;EACb;EAEA,OACErB,KAAA,CAACZ,IAAI;IAAA4D,QAAA,GACHlD,IAAA,CAACJ,MAAM;MACHuD,aAAa,EAAGnD,IAAA,CAACL,MAAM;QACrByD,IAAI,EACFpD,IAAA,CAACH,IAAI;UACHwD,IAAI,EAAC,YAAY;UACjBC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAC;QAAO,EAEhB;QACDC,KAAK,EAAC,EAAE;QACRC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAInD,UAAU,CAAC2C,QAAQ,CAAC,OAAO,CAAC;QAAA;MAAC,EACxC;MACJS,eAAe,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE;UAAEL,KAAK,EAAE,MAAM;UAAEM,QAAQ,EAAE;QAAG;MAAE;IAAE,EAC/E,EACF3D,KAAA,CAACZ,IAAI;MAACsE,KAAK,EAAEE,OAAO,CAACC,SAAU;MAAAb,QAAA,GAE/BlD,IAAA,CAACR,SAAS;QACRoE,KAAK,EAAEE,OAAO,CAACE,KAAM;QACrBC,WAAW,EAAC,MAAM;QAClBC,KAAK,EAAExD,OAAQ;QACfyD,YAAY,EAAExD;MAAQ,EACtB,EACFX,IAAA,CAACR,SAAS;QACRoE,KAAK,EAAEE,OAAO,CAACE,KAAM;QACrBC,WAAW,EAAC,OAAO;QACnBG,YAAY,EAAC,eAAe;QAC5BF,KAAK,EAAEpD,QAAS;QAChBqD,YAAY,EAAEpD;MAAS,EACvB,EACFf,IAAA,CAACR,SAAS;QACRoE,KAAK,EAAEE,OAAO,CAACE,KAAM;QACrBC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEhD,WAAY;QACnBiD,YAAY,EAAEhD;MAAY,EAC1B,EACFnB,IAAA,CAACP,gBAAgB;QAACmE,KAAK,EAAEE,OAAO,CAACO,MAAO;QAACZ,OAAO,EAAEZ,OAAQ;QAAAK,QAAA,EACxDlD,IAAA,CAACT,IAAI;UAACqE,KAAK,EAAEE,OAAO,CAACQ,UAAW;UAAApB,QAAA,EAAC;QAAO;MAAO,EAC9B,EACnBlD,IAAA,CAACP,gBAAgB;QAACmE,KAAK,EAAEE,OAAO,CAACO,MAAO;QAACZ,OAAO,EAAEX,OAAQ;QAAAI,QAAA,EACxDlD,IAAA,CAACT,IAAI;UAACqE,KAAK,EAAEE,OAAO,CAACQ,UAAW;UAAApB,QAAA,EAAC;QAAO;MAAO,EAC9B;IAAA,EACZ;EAAA,EACF;AAEX;AAEA,IAAMY,OAAO,GAAGpE,UAAU,CAAC6E,MAAM,CAAC;EAChCR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE;EACd,CAAC;EACDpB,KAAK,EAAE;IACLK,QAAQ,EAAE,EAAE;IACZgB,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBF,UAAU,EAAE;EACd,CAAC;EACDZ,KAAK,EAAE;IACLe,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,EAAE;IACrBN,YAAY,EAAE;EAChB,CAAC;EACDT,MAAM,EAAE;IACNM,eAAe,EAAE,SAAS;IAC1BU,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVH,YAAY,EAAE,EAAE;IAChBJ,KAAK,EAAE,KAAK;IACZN,UAAU,EAAE;EACd,CAAC;EACDH,UAAU,EAAE;IACVf,KAAK,EAAE,MAAM;IACbM,QAAQ,EAAE,EAAE;IACZgB,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe1E,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}