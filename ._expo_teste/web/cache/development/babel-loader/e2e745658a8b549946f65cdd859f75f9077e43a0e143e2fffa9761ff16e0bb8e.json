{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Header, Icon } from 'react-native-elements';\nimport { usuarios, adicionarUsuario, removerUsuario } from \"../backend/dados.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CadastroScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cpf = _useState4[0],\n    setCpf = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    senha = _useState8[0],\n    setSenha = _useState8[1];\n  function cadastrar() {\n    if ((nome, cpf, email, senha) !== '') {\n      var usuario = {\n        id: null,\n        nome: nome,\n        cpf: cpf,\n        email: email,\n        senha: senha\n      };\n      adicionarUsuario(usuario);\n      limparCampos();\n      alert(\"Usuário Cadastro com sucesso!\");\n      navigation.navigate('Home');\n    } else {\n      alert(\"Favor digitar todos os campos!\");\n    }\n  }\n  function limparCampos() {\n    setNome('');\n    setCpf('');\n    setEmail('');\n    setSenha('');\n  }\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      leftComponent: _jsx(Button, {\n        icon: _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 25,\n          color: \"white\"\n        }),\n        title: \"\",\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        }\n      }),\n      centerComponent: {\n        text: 'Usuário',\n        style: {\n          color: '#fff',\n          fontSize: 25\n        }\n      }\n    }), _jsxs(View, {\n      style: styles2.container,\n      children: [_jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Nome\",\n        value: nome,\n        onChangeText: setNome\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"CPF\",\n        value: cpf,\n        onChangeText: setCpf\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Senha\",\n        secureTextEntry: true,\n        value: senha,\n        onChangeText: setSenha\n      }), _jsx(TouchableOpacity, {\n        style: styles2.button,\n        onPress: cadastrar,\n        children: _jsx(Text, {\n          style: styles2.buttonText,\n          children: \"Salvar\"\n        })\n      })]\n    })]\n  });\n}\nvar styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    paddingTop: 40\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    paddingTop: 40\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#1c313a',\n    padding: 10,\n    margin: 10,\n    borderRadius: 14,\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default CadastroScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Button","Header","Icon","usuarios","adicionarUsuario","removerUsuario","jsx","_jsx","jsxs","_jsxs","CadastroScreen","_ref","navigation","_useState","_useState2","_slicedToArray","nome","setNome","_useState3","_useState4","cpf","setCpf","_useState5","_useState6","email","setEmail","_useState7","_useState8","senha","setSenha","cadastrar","usuario","id","limparCampos","alert","navigate","children","leftComponent","icon","name","size","color","title","onPress","centerComponent","text","style","fontSize","styles2","container","input","placeholder","value","onChangeText","keyboardType","secureTextEntry","button","buttonText","create","flex","alignItems","justifyContent","backgroundColor","paddingTop","fontWeight","marginBottom","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","padding","margin"],"sources":["C:/Users/ricar/Documents/Projetos/formacao-node-react-ifpe/react/reactnativeapp/atividade02/screens/cadastroScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Button, Header, Icon } from 'react-native-elements';\r\nimport { usuarios, adicionarUsuario, removerUsuario } from '../backend/dados.js';\r\n\r\nfunction CadastroScreen({ navigation }) {\r\n  const [nome, setNome] = useState('');\r\n  const [cpf, setCpf] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n\r\n  function cadastrar() {\r\n    // Aqui você pode implementar a lógica para cadastrar o usuário\r\n    if((nome, cpf, email, senha) !== ''){\r\n      const usuario = { id: null, nome: nome, cpf: cpf, email: email, senha: senha };\r\n      adicionarUsuario(usuario);\r\n      limparCampos();\r\n      alert(\"Usuário Cadastro com sucesso!\")\r\n      navigation.navigate('Home');\r\n    }else{\r\n      alert(\"Favor digitar todos os campos!\")\r\n    }\r\n  }\r\n\r\n  function limparCampos() {\r\n    setNome('');\r\n    setCpf('');\r\n    setEmail('');\r\n    setSenha('');\r\n  }\r\n\r\n  return (\r\n    <View >\r\n      <Header\r\n          leftComponent={ <Button\r\n            icon={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                size={25}\r\n                color=\"white\"\r\n              />\r\n            }\r\n            title=\"\"\r\n            onPress={()=>navigation.navigate('Home')}            \r\n          /> }\r\n          centerComponent={{ text: 'Usuário', style: { color: '#fff', fontSize: 25 } }}\r\n      />\r\n      <View style={styles2.container}>    \r\n      \r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Nome\"\r\n        value={nome}\r\n        onChangeText={setNome}\r\n      />\r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"CPF\"\r\n        value={cpf}\r\n        onChangeText={setCpf}\r\n      />\r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Email\"\r\n        keyboardType=\"email-address\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry\r\n        value={senha}\r\n        onChangeText={setSenha}\r\n      />\r\n      <TouchableOpacity style={styles2.button} onPress={cadastrar}>\r\n        <Text style={styles2.buttonText}>Salvar</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles2 = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    paddingTop: 40\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n    paddingTop: 40\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#1c313a',\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 14,\r\n    width: '80%',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default CadastroScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}