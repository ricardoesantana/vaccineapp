{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Header, ListItem, Avatar, Icon } from 'react-native-elements';\nimport { lista } from \"../backend/dados.js\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ListaScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    list = _useState2[0],\n    setList = _useState2[1];\n  var refresh = useIsFocused();\n  useEffect(function () {\n    setList(lista);\n  }, [refresh]);\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      leftComponent: _jsx(Button, {\n        icon: _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 25,\n          color: \"white\"\n        }),\n        title: \"\",\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        }\n      }),\n      rightComponent: _jsx(Button, {\n        title: \"+\",\n        onPress: function onPress() {\n          return navigation.navigate('Contato');\n        }\n      }),\n      centerComponent: {\n        text: 'Lista de Contatos',\n        style: {\n          color: '#fff',\n          fontSize: 25\n        }\n      }\n    }), list.map(function (l, i) {\n      return _jsxs(ListItem, {\n        bottomDivider: true,\n        onPress: function onPress() {\n          return navigation.navigate('AlterarContato', {\n            nome: l.nome,\n            telefone: l.telefone,\n            email: l.email,\n            id: linha.id\n          });\n        },\n        children: [_jsx(Avatar, {\n          source: {\n            uri: l.avatar_url\n          }\n        }), _jsxs(ListItem.Content, {\n          children: [_jsx(ListItem.Title, {\n            children: l.nome\n          }), _jsx(ListItem.Subtitle, {\n            children: l.telefone\n          })]\n        })]\n      }, i);\n    })]\n  });\n}\nvar styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    paddingTop: 40\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    paddingTop: 40\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#1c313a',\n    padding: 10,\n    margin: 10,\n    borderRadius: 14,\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ListaScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","Button","Header","ListItem","Avatar","Icon","lista","useIsFocused","jsx","_jsx","jsxs","_jsxs","ListaScreen","_ref","navigation","_useState","_useState2","_slicedToArray","list","setList","refresh","children","leftComponent","icon","name","size","color","title","onPress","navigate","rightComponent","centerComponent","text","style","fontSize","map","l","i","bottomDivider","nome","telefone","email","id","linha","source","uri","avatar_url","Content","Title","Subtitle","styles2","create","container","flex","alignItems","justifyContent","backgroundColor","paddingTop","fontWeight","marginBottom","input","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","button","padding","margin","buttonText"],"sources":["C:/Users/ricar/Documents/Projetos/formacao-node-react-ifpe/react/reactnativeapp/atividade02/screens/listaScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Button, Header, ListItem, Avatar, Icon  } from 'react-native-elements';\r\nimport { lista } from '../backend/dados.js';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\nfunction ListaScreen({ navigation }) {\r\n\r\n  const [list, setList] = useState([]);\r\n  const refresh = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    setList(lista);\r\n  }, [refresh])\r\n\r\n  return (\r\n    <View >\r\n      <Header\r\n        leftComponent={ <Button\r\n          icon={\r\n            <Icon\r\n              name=\"arrow-left\"\r\n              size={25}\r\n              color=\"white\"\r\n            />\r\n          }\r\n          title=\"\"\r\n          onPress={()=>navigation.navigate('Home')}            \r\n        /> }\r\n        rightComponent={<Button\r\n          title=\"+\"\r\n          onPress={() => navigation.navigate('Contato')}\r\n        />}\r\n        centerComponent={{ text: 'Lista de Contatos', style: { color: '#fff', fontSize: 25 } }}\r\n      />\r\n        {\r\n          list.map((l, i) => (\r\n            <ListItem key={i} bottomDivider onPress={()=> navigation.navigate('AlterarContato',\r\n            {\r\n                nome: l.nome,\r\n                telefone: l.telefone,\r\n                email: l.email,\r\n                id:linha.id\r\n            })}>\r\n              <Avatar source={{ uri: l.avatar_url }}  />\r\n              <ListItem.Content>\r\n                <ListItem.Title>{l.nome}</ListItem.Title>\r\n                <ListItem.Subtitle>{l.telefone}</ListItem.Subtitle>\r\n              </ListItem.Content>\r\n            </ListItem>\r\n          ))\r\n        }\r\n      </View>\r\n      );\r\n}\r\n\r\n      const styles2 = StyleSheet.create({\r\n        container: {\r\n        flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: '#fff',\r\n      paddingTop: 40\r\n  },\r\n      title: {\r\n        fontSize: 24,\r\n      fontWeight: 'bold',\r\n      marginBottom: 24,\r\n      paddingTop: 40\r\n  },\r\n      input: {\r\n        width: '80%',\r\n      height: 40,\r\n      borderWidth: 1,\r\n      borderColor: '#ccc',\r\n      borderRadius: 4,\r\n      paddingHorizontal: 16,\r\n      marginBottom: 16,\r\n  },\r\n      button: {\r\n        backgroundColor: '#1c313a',\r\n      padding: 10,\r\n      margin: 10,\r\n      borderRadius: 14,\r\n      width: '80%',\r\n      alignItems: 'center',\r\n  },\r\n      buttonText: {\r\n        color: '#fff',\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default ListaScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}