{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Header, Icon } from 'react-native-elements';\nimport { firebaseConfig } from \"../backend/autentica.js\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar app = initializeApp(firebaseConfig);\nvar analytics = getAnalytics(app);\nfunction CadastroScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    senha = _useState4[0],\n    setSenha = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errorEmail = _useState6[0],\n    setErrorEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorSenha = _useState8[0],\n    setErrorSenha = _useState8[1];\n  function cadastrar() {\n    if (email !== '' && senha !== '' && email !== null && senha !== null) {\n      setErrorEmail('');\n      setErrorSenha('');\n      var auth = getAuth();\n      createUserWithEmailAndPassword(auth, email, senha).then(function (userCredential) {\n        var user = userCredential.user;\n        limparCampos();\n        alert(\"Usuário Cadastro com sucesso! \");\n        navigation.navigate('Home');\n      }).catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(\"Faha na criação do Usuário: \" + errorCode + errorMessage);\n      });\n    } else {\n      if (email === '' || email === null) {\n        setErrorEmail('Preencha seu e-mail corretamente');\n      }\n      if (senha === '' || senha === null) {\n        setErrorSenha('Preecha sua senha corretamente');\n      }\n    }\n  }\n  function limparCampos() {\n    setEmail('');\n    setSenha('');\n  }\n  return _jsxs(View, {\n    style: [styles2.container, {\n      flexDirection: \"column\"\n    }],\n    children: [_jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(Header, {\n        leftComponent: _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"arrow-left\",\n            size: 25,\n            color: \"white\"\n          }),\n          title: \"\",\n          onPress: function onPress() {\n            return navigation.navigate('Home');\n          }\n        }),\n        centerComponent: {\n          text: 'Usuário',\n          style: {\n            color: '#fff',\n            fontSize: 25,\n            width: 300,\n            textAlign: 'auto',\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center'\n          }\n        },\n        centerContainerStyle: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 2\n      },\n      children: [_jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Email\",\n        errorStyle: {\n          color: 'red'\n        },\n        errorMessage: errorEmail,\n        keyboardType: \"email-address\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles2.input,\n        placeholder: \"Senha\",\n        errorStyle: {\n          color: 'red'\n        },\n        errorMessage: errorSenha,\n        secureTextEntry: true,\n        value: senha,\n        onChangeText: setSenha\n      }), _jsx(TouchableOpacity, {\n        style: styles2.button,\n        onPress: cadastrar,\n        children: _jsx(Text, {\n          style: styles2.buttonText,\n          children: \"Salvar\"\n        })\n      })]\n    })]\n  });\n}\nvar styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    paddingTop: 0\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 24,\n    paddingTop: 40\n  },\n  input: {\n    width: 300,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#1c313a',\n    padding: 10,\n    margin: 10,\n    borderRadius: 14,\n    width: 120,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default CadastroScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Button","Header","Icon","firebaseConfig","initializeApp","getAnalytics","getAuth","createUserWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","app","analytics","CadastroScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","senha","setSenha","_useState5","_useState6","errorEmail","setErrorEmail","_useState7","_useState8","errorSenha","setErrorSenha","cadastrar","auth","then","userCredential","user","limparCampos","alert","navigate","catch","error","errorCode","code","errorMessage","message","style","styles2","container","flexDirection","children","flex","leftComponent","icon","name","size","color","title","onPress","centerComponent","text","fontSize","width","textAlign","alignItems","justifyContent","centerContainerStyle","input","placeholder","errorStyle","keyboardType","value","onChangeText","secureTextEntry","button","buttonText","create","backgroundColor","paddingTop","fontWeight","marginBottom","height","borderWidth","borderColor","borderRadius","paddingHorizontal","padding","margin","alignSelf"],"sources":["C:/Users/ricar/Documents/Projetos/formacao-node-react-ifpe/react/reactnativeapp/atividade02/screens/cadastroScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Button, Header, Icon } from 'react-native-elements';\r\n// import { usuarios, adicionarUsuario, removerUsuario } from '../backend/dados.js';\r\nimport { firebaseConfig } from '../backend/autentica.js';\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nfunction CadastroScreen({ navigation }) {\r\n\r\n  // const [nome, setNome] = useState('');\r\n  // const [cpf, setCpf] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [errorEmail, setErrorEmail] = useState('');\r\n  const [errorSenha, setErrorSenha] = useState('');\r\n\r\n  function cadastrar() {\r\n    // Aqui você pode implementar a lógica para cadastrar o usuário\r\n    // if ((nome, cpf, email, senha) !== '') {\r\n    //   const usuario = { id: null, nome: nome, cpf: cpf, email: email, senha: senha };\r\n    //   adicionarUsuario(usuario);\r\n    //   limparCampos();\r\n    //   alert(\"Usuário Cadastro com sucesso!\")\r\n    //   navigation.navigate('Home');\r\n    // } else {\r\n    //   alert(\"Favor digitar todos os campos!\")\r\n    // }\r\n\r\n    if(email !== '' && senha !== '' && email !== null && senha !== null){\r\n      setErrorEmail('');\r\n      setErrorSenha('');\r\n      const auth = getAuth();\r\n      createUserWithEmailAndPassword(auth, email, senha)\r\n        .then((userCredential) => {\r\n          // Signed in\r\n          const user = userCredential.user;\r\n          limparCampos();\r\n          alert(\"Usuário Cadastro com sucesso! \")\r\n          navigation.navigate('Home');\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          alert(\"Faha na criação do Usuário: \" + errorCode + errorMessage);\r\n        });\r\n    } else {\r\n      // alert(\"Favor digitar todos os campos!\");\r\n      if(email === '' || email === null){\r\n        setErrorEmail('Preencha seu e-mail corretamente');\r\n      }\r\n      if(senha === '' || senha === null){\r\n        setErrorSenha('Preecha sua senha corretamente');\r\n      }\r\n    }\r\n  }\r\n\r\n  function limparCampos() {\r\n    // setNome('');\r\n    // setCpf('');\r\n    setEmail('');\r\n    setSenha('');\r\n  }\r\n\r\n  return (\r\n    <View style={[styles2.container, {\r\n      flexDirection: \"column\"\r\n    }]}>\r\n      <View style={{ flex: 1 }} >\r\n        <Header\r\n          leftComponent={<Button\r\n            icon={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                size={25}\r\n                color=\"white\"\r\n              />\r\n            }\r\n            title=\"\"\r\n            onPress={() => navigation.navigate('Home')}\r\n          />}\r\n          centerComponent={{\r\n            text: 'Usuário',\r\n            style: { color: '#fff', fontSize: 25, width: 300, textAlign: 'auto', flex: 1, alignItems: 'center', justifyContent: 'center' }\r\n          }}\r\n          centerContainerStyle={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}\r\n        />\r\n      </View>\r\n      {/* <View style={styles2.container}> */}\r\n      <View style={{ flex: 2 }} >\r\n        {/* <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"Nome\"\r\n        value={nome}\r\n        onChangeText={setNome}\r\n      />\r\n      <TextInput\r\n        style={styles2.input}\r\n        placeholder=\"CPF\"\r\n        keyboardType=\"numeric\"\r\n        maxLength={11}\r\n        value={cpf}\r\n        onChangeText={setCpf}\r\n      /> */}\r\n        <TextInput\r\n          style={styles2.input}\r\n          placeholder=\"Email\"\r\n          errorStyle={{ color: 'red' }}\r\n          errorMessage={errorEmail}\r\n          keyboardType=\"email-address\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n        />\r\n        <TextInput\r\n          style={styles2.input}\r\n          placeholder=\"Senha\"\r\n          errorStyle={{ color: 'red' }}\r\n          errorMessage={errorSenha}\r\n          secureTextEntry\r\n          value={senha}\r\n          onChangeText={setSenha}\r\n        />\r\n        <TouchableOpacity style={styles2.button} onPress={cadastrar}>\r\n          <Text style={styles2.buttonText}>Salvar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles2 = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    paddingTop: 0\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n    paddingTop: 40\r\n  },\r\n  input: {\r\n    width: 300,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#1c313a',\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 14,\r\n    width: 120,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center'\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default CadastroScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}